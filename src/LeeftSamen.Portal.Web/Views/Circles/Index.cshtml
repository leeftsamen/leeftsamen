@using LeeftSamen.Portal.Web.Models
@using System.Configuration
@model LeeftSamen.Portal.Web.Models.Circles.IndexViewModel
@{
    var title = Title.MyCircles;
    var noCirclesLabel = Label.NoUserCircles;
    if (!Model.MyCircles)
    {
        title = Title.PublicCirclesInMyNeighborhood;
        noCirclesLabel = Label.NoPublicCirclesInNeighborhoodFound;
    }

    ViewBag.Title = title;
}

@if (!Model.CurrentUserCanOnlyView)
{
    <div class="relative-inline-block pull-right mobilebutton">
        @if (Model.HelpIcons.Any(h => h.Type == "circle-create"))
        {
            var helpIcon = Model.HelpIcons.First(h => h.Type == "circle-create");
            Html.RenderPartial("~/Views/Shared/_HelpIcon.cshtml", new HelpIconViewModel { Id = helpIcon.HelpIconId, Placement = helpIcon.TextPlacement, CssClass = "circle-create", HelpText = helpIcon.Text });
        }
        <a class="btn btn-primary pull-right" href="@Url.Action("Create", "Circles")">
            <span class="glyphicon glyphicon-plus-sign"></span>
            @Button.CreateCircle
        </a>
    </div>
}
@if (Model.InvitationCircles != null && Model.InvitationCircles.Count > 0)
{
    <h1>@Title.MyCircleInvites</h1>
    <div class="panel panel-default panel-overflow">
        <div class="panel-body circle-overview">
            @Html.Partial("_CircleInvitationTable", Model.InvitationCircles)
        </div>
    </div>
}

<h1>@title</h1>
<div class="panel panel-default panel-overflow">
    <div class="panel-body circle-overview">
        @if (Model.Circles.Any())
        {
            @Html.Partial(string.Format("_CircleOverviewTable{0}", ConfigurationManager.AppSettings["ShowRestyle"] == "true" ? "Restyle" : string.Empty), Model.Circles)
        }
        else
        {
            @noCirclesLabel
        }
    </div>
</div>
