@using LeeftSamen.Portal.Web.Models
@using LeeftSamen.Portal.Web.Models.Circles
@model CirclePhotosViewModel
@{
    ViewBag.Title = Model.CircleName;
    int? albumId = null;

    if (Model.CurrentPhotoAlbum != null)
    {
        albumId = Model.CurrentPhotoAlbum.CirclePhotoAlbumId;
    }
}

@Html.Action("DetailHeader", "Circles", new { id = Model.CircleId, albumId = albumId })
<div class="row">
    <div class="col-md-12">
        @if (Model.CurrentPhotoAlbum == null)
        {
        <div class="shift-left">
            <div class="panel-heading" style="padding-right:0px;">
                @if (Model.CurrentUserIsCircleAdministrator)
                {
                    <div class="form-horizontal pull-right">
                        <a role="menuitem" tabindex="-1" href="#" class="btn btn-primary"
                           data-toggle="modal" data-target="#createPhotoAlbum"
                           data-title="@Title.ConfirmRemovePhotoAlbum" data-body="@Text.ConfirmRemovePhotoAlbum" data-button="@Button.RemovePhotoAlbum"
                           data-action="@Url.Action("RemovePhotoAlbum", new { circleId = @Model.CircleId })">@Button.CreatePhotoAlbum</a>
                    </div>
                }
                <h3 class="panel-title">@Title.CircleAlbums</h3>
            </div>


            <div class="make-block panel-body" id="circle-albums">
                @if (Model.PhotoAlbums.Count == 0)
                {
                    <p>@Text.NoAlbumsFound</p>
                }
                else
                {
                    foreach (var album in Model.PhotoAlbums.OrderByDescending(m => m.Title))
                    {
                        <div class="circle-album">
                            @if (album.Cover != null)
                            {
                                <img src="@Url.RouteUrl("DefaultDetail", new { controller = "Circles", action = "Photo", id = Model.CircleId, mediaId = album.Cover.PhotoId })" alt="" />
                            }
                            else
                            {
                                <div class="circle-album-placeholder"></div>
                            }
                            <div class="circle-album-description">@Html.ActionLink(album.Title, "Photos", "Circles", new { photoAlbumId = album.Id }, new { }) (@album.Count) </div>
                        </div>
                    }
                }

            </div>
        </div>
        }
        else
        {
            <a class="btn btn-default" href="@Url.RouteUrl("DefaultDetail", new { controller = "Circles", action = "Photos", circleId = Model.CircleId })">@Button.BackToOverview</a>
            <br />
            <br />
        }

        <div class="shift-left">
            <div class="panel-heading" style="padding-right:0px;">
                @*@if (Model.CurrentUserIsCircleAdministrator)
                {*@

                    @using (Html.BeginForm("AddPhotos", "Circles", FormMethod.Post, new { enctype = "multipart/form-data", @id = "circle-photo-form" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal pull-right">

                            @Html.ValidationMessage("circle-photo-upload", null, new { @class = "help-block" })

                            @if (Model.CurrentPhotoAlbum != null)
                            {
                                @Html.Hidden("albumId", Model.CurrentPhotoAlbum.CirclePhotoAlbumId)
                            }

                            <input id="circle-photo-input" name="circle-photo-upload" type="file" accept="image/gif, image/jpeg, image/png" multiple/>
                            <label for="circle-photo-input" class="btn btn-primary">@Button.AddPhoto</label>
                        </div>
                    }
                @*}*@
                <h3 class="panel-title">
                    @if (Model.CurrentPhotoAlbum != null)
                    {
                        @Model.CurrentPhotoAlbum.Title
                    }
                    else
                    {
                        @Title.CirclePhotos
                    }
                </h3>
            </div>

            <div class="panel-body make-block" id="circle-photos">
                @if (Model.Documents.Count == 0)
                {
                    <p>@Text.NoPhotosFound</p>
                }
                else
                {
                    var lastMonth = DateTime.MinValue.Month;
                    var tableOpened = false;

                    foreach (var photo in Model.Documents.OrderByDescending(m => m.Item.CreationDate))
                    {
                        if (lastMonth != photo.Item.CreationDate.Month)
                        {
                            lastMonth = photo.Item.CreationDate.Month;

                            if (tableOpened)
                            {
                                @Html.Raw("</div>")
                            }

                            @Html.Raw("<div class='circle-photo-month-row'>")
                            tableOpened = true;

                            <h4>@photo.Item.CreationDate.ToString("MMMM")</h4>
                            <hr/>
                        }

                        <div class="circle-photo">
                            @if (Model.CurrentUserIsCircleAdministrator || photo.OwnerId == Model.CurrentUserId)
                            {
                                <div class="dropdown pull-right circle-photo-dropdown">

                                    <button class="btn btn-default btn-sm dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-expanded="true" aria-label="Left Align">
                                        <span class="glyphicon glyphicon-cog" aria-hidden="true"></span>
                                    </button>

                                    <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">
                                        <li role="presentation">
                                            <a role="menuitem" tabindex="-1" href="#"
                                               data-toggle="modal" data-target="#modal"
                                               data-title="@Title.ConfirmRemovePhoto" data-body="@Text.ConfirmRemovePhoto" data-button="@Button.RemovePhoto"
                                               data-action="@Url.Action("RemoveCirclePhoto", new { circleId = @Model.CircleId, photoId = photo.Item.MediaId, photoAlbumId = albumId })">
                                                @Button.RemovePhoto</a>
                                        </li>
                                    </ul>
                                </div>
                            }

                            <a data-lightbox="photos" href="@Url.RouteUrl("DefaultDetail", new { controller = "Circles", action = "PhotoLarge", id = Model.CircleId, mediaId = photo.Item.MediaId })">
                                <img src="@Url.RouteUrl("DefaultDetail", new { controller = "Circles", action = "Photo", id = Model.CircleId, mediaId = photo.Item.MediaId })" alt="" />
                            </a>

                        </div>
                    }
                }

            </div>
        </div>
    </div>
</div>


@section modals {
    <div class="modal fade" id="createPhotoAlbum" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                @using (Html.BeginForm("AddPhotoAlbum", "Circles", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="@Button.Cancel">
                            <span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title">@Button.CreatePhotoAlbum</h4>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-horizontal">
                                    @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                                    @*                                @Html.ValidationSummary()*@
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-primary" type="submit">@Button.CreatePhotoAlbum</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">@Button.Cancel</button>
                    </div>
                }
            </div>
        </div>
    </div>
}


@section scripts
{
    @Styles.Render("~/Content/lightbox")
    @Scripts.Render("~/bundles/lightbox")

    <script>

        //$(document).on("click", "#circle-photo-submit", function(e) {
        //    $("#circle-photo-input").click();
        //});

        $(document).on("change", "#circle-photo-input", function() {
            $("#circle-photo-form").submit();
        });


    </script>
}