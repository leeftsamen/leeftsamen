@using System
@using System.Linq
@using LeeftSamen.Portal.Web.Models
@using LeeftSamen.Portal.Web.Models.Users
@model LeeftSamen.Portal.Web.Models.Circles.MembersViewModel
@{
    ViewBag.Title = Model.CircleName;
}

<div class="row">
    <div class="col-md-12">
        @Html.Action("DetailHeader", "Circles", new { id = Model.CircleId })
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="make-block shift-left">
            <div class="panel-body" style="padding-bottom: 0">
                @if (Model.CurrentUserIsCircleAdministrator)
                {
                    <div class="relative-inline-block pull-right block-xs">
                        @if (Model.HelpIcons.Any(h => h.Type == "circle-invite"))
                        {
                            var helpIcon = Model.HelpIcons.First(h => h.Type == "circle-invite");
                            Html.RenderPartial("~/Views/Shared/_HelpIcon.cshtml", new HelpIconViewModel { Id = helpIcon.HelpIconId, Placement = helpIcon.TextPlacement, CssClass = "circle-create", HelpText = helpIcon.Text });
                        }
                        <div class="btn btn-primary" data-target="#inviteUserModal" data-toggle="modal">@Button.InviteUsers</div>
                    </div>

                }
                <h3 class="panel-title">
                    @string.Format(Model.Members.Count == 1 ? Title.NbrCircleMember : Title.NbrCircleMembers, Model.Members.Count)
                </h3>
                <br />
                @if (Model.CurrentUserIsCircleAdministrator)
                {
                    <p>@Text.CircleMembersAdminSubText</p>
                }
                <a href="@Url.Action("ChangeMemberProfile", new {id = Model.CircleId})" class="btn btn-primary">Profiel aanpassen</a>
            </div>
        </div>
        @if (Model.CurrentUserIsCircleAdministrator)
        {
            var items = new List<MenuItemModel>();
            items.Add(
            new MenuItemModel(
                "DefaultDetail",
                new RouteValueDictionary(new { controller = "Circles", action = "Members", Id = Model.CircleId }),
                Button.AllMembers,
                true
            ));
            items.Add(
            new MenuItemModel(
                "DefaultDetail",
                new RouteValueDictionary(new { controller = "Circles", action = "JoinRequests", Id = Model.CircleId }),
                Button.PendingJoinRequests,
                false
            ));
            @Html.Partial("~/Views/Shared/_TabMenu.cshtml", items)
        }

        <div class="shift-left">
            @{ 
                var formId = "filterform";
                var formAction = Url.RouteUrl("CircleMarketplace", new { id = Model.CircleId, controller = "Marketplace", action = "Members" });
            }
            <form method="get" action="@formAction" id="@formId">
                <div class="panel-blue margin-bottom-10-px row">
                    <div class="col-md-8">
                        @Html.TextBox("Query", null, new { @class = "form-control" })
                    </div>
                    <div class="col-md-4">
                        <button class="btn btn-primary">Zoeken</button>
                    </div>
                </div>
            </form>
        <div id="members" class="row clear">
            @foreach (var member in Model.Members)
            {
                    <div class="col-lg-3 col-md-4 col-xs-6 col-xxs-12">
                        <div class="tile panel-member">
                            <div class="panel-body text-center">
                                @if (Model.CurrentUserIsCircleAdministrator && (!member.IsAdministrator || Model.NumberOfAdmins > 1))
                                {
                                    <div class="dropdown pull-right" style="margin-left: -26px;">
                                        <button class="btn btn-default btn-xs dropdown-toggle" type="button" data-toggle="dropdown" aria-expanded="true" aria-label="Left Align">
                                            <span class="glyphicon glyphicon-cog" aria-hidden="true"></span>
                                        </button>
                                        <ul class="dropdown-menu" role="menu">
                                            @if (!member.HasBeenInvited)
                                            {
                                                <li>
                                                    @{
                                                        var title = Title.ConfirmGiveMemberAdminRights;
                                                        var body = Text.ConfirmGiveMemberCircleAdminRights;
                                                        var button = Button.GiveMemberAdminRights;
                                                        var action = "GiveAdmin";
                                                        if (member.IsAdministrator)
                                                        {
                                                            title = Title.RemoveMemberAdminRights;
                                                            body = Text.RemoveMemberCircleAdminRights;
                                                            button = Button.RemoveMemberAdminRights;
                                                            action = "RevokeAdmin";
                                                        }
                                                    }
                                                    <a role="menuitem" href="#"
                                                        data-toggle="modal" data-target="#modal"
                                                        data-title="@title"
                                                        data-body="@body"
                                                        data-button="@button"
                                                        data-hidden='{"userId": "@member.UserId"}'
                                                        data-action="@Url.Action(action, new {id = Model.CircleId})">@button</a>
                                                </li>
                                                        }
                                                        else
                                                        {
                                                            <li role="presentation">
                                                                <button type="button" class="btn btn-link"
                                                                        data-toggle="modal" data-target="#modal"
                                                                        data-title="@Title.ConfirmInvitationReminder" data-body="@String.Format(Text.ConfirmInvitationReminder, member.UserName)" data-button="@Button.SendMessage"
                                                                        data-action="@Url.Action("SendInvitationReminder", new { id = Model.CircleId })" data-hidden='{"memberId": "@member.UserId", "email": "@member.Email" }'>
                                                                    @(Label.SendCircleInvitationReminder)
                                                                </button>
                                                            </li>
                                                        }
                                            <li role="presentation">
                                                <button type="button" class="btn btn-link"
                                                        data-toggle="modal" data-target="#modal"
                                                        data-title="@Title.ConfirmRemoveCircleMember" data-body="@Text.ConfirmRemoveCircleMember" data-button="@Button.RemoveMember"
                                                        data-action="@Url.Action("RemoveMember", new { id = Model.CircleId })" data-hidden='{"memberId": "@member.UserId", "email": "@member.Email" }'>
                                                    @(member.HasBeenInvited ? Label.RemoveInvitation : Label.RemoveCircleMember)
                                                </button>
                                            </li>
                                        </ul>
                                    </div>
                                                        }

                                @Html.Partial("_UserProfileImage", new UserProfileImage(member.UserProfileImageId, member.UserId, "profile-image"))
                                <h4>@(member.UserName ?? member.Email)</h4>
                                @member.UserCity
                                <br />
                                @if (!string.IsNullOrEmpty(member.ProfileDescription))
                                {
                                    <br />
                                    if (member.ProfileDescription.Length > 83)
                                    {
                                        @(member.ProfileDescription.Substring(0, 80) + "...")

                                        <a href="@Url.RouteUrl("CircleMemberDetail", new { controller = "Circles", action = "MemberDetail", id = Model.CircleId, userId = member.UserId })">@Text.ContinueReading</a>
                                    }
                                    else
                                    {

                                        @member.ProfileDescription
                                    }
                                }
                            </div>
                            <div class="panel-footer">
                                @if (@member.HasBeenInvited)
                                {
                                    if (member.InvitationIsExpired)
                                    {
                                        <label class="label label-danger">@Label.InvitationExpired</label>
                                    }
                                    else
                                    {
                                        <label class="label label-info">@Label.InvitedToCircle</label>
                                    }
                                }
                                else if (@member.IsAdministrator)
                                {
                                    <label class="label label-primary">@Label.CircleAdministrator</label>
                                }
                                else
                                {
                                    <label class="label label-default">@Label.CircleMember</label>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section modals {
    @Html.Partial("_InviteUserModal", new InviteUserViewModel { Title = Title.InviteUsersToCircle, Instruction = Text.InviteUsersToCircleInstruction })
}

@section scripts
{
    @Scripts.Render("~/bundles/angular")
    @Html.Partial("_InviteUserModalScript")
}
