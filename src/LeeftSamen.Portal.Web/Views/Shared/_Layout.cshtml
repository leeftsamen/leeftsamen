@using System
@using LeeftSamen.Portal.Web.Utils
@using System.Web.Configuration
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - @Title.AppName</title>
    @Styles.Render("~/Content/css")
    @RenderSection("stylesheets", false)
    @Scripts.Render("~/bundles/modernizr")
    <link rel="shortcut icon" href="@Url.Content("~/favicon.ico")">
</head>

@{ string bodyclass = null;}
@if (ViewBag.BackgroundPoster != null)
{
    bodyclass = "not-authenticated body-home";
}
else if (Request.IsAuthenticated == false)
{
    bodyclass = "not-authenticated";
}
    
<body class="@bodyclass">
    <!-- Google Tag Manager -->
    <noscript>
        <iframe src="//www.googletagmanager.com/ns.html?id=GTM-WWVMG8"
                height="0" width="0" style="display:none;visibility:hidden"></iframe>
    </noscript>
    <script>
    (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
    '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-WWVMG8');</script>
    <!-- End Google Tag Manager --> 
    <div class="navbar navbar-default navbar-static-top" role="navigation">
        @if (Request.IsAuthenticated)
        {
            var query = ViewUtils.GetController(ViewContext).ToLower() == "search" ? Request.QueryString["query"] : string.Empty;
            <form method="get" action="@Url.RouteUrl("Default", new { controller = "Search", action = "Index" })">
                <button type="submit" id="searchSubmit" class="glyphicon glyphicon-search" style="left: 247px;"></button>
                <div id="searchBox">
                    <input name="query" value="@query" type="text" id="searchBoxInput" placeholder="@PlaceHolder.TypeToSearch" tabindex="1" />
                </div>
            </form>

            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#side-menu">
                <span class="sr-only">@Label.Toggle</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
        }

        <ul class="nav navbar-nav navbar-right">
            @if (Request.IsAuthenticated)
            {
                @Html.Action("Header", "Account")
            }
            else
            {
                @Html.Partial("_LoginBox", new LeeftSamen.Portal.Web.Models.Account.LoginViewModel())
            }
        </ul>

        <div class="navbar-header">
            @{ 
                var logo = WebConfigurationManager.AppSettings["Company"];
            }
            <a href="~/" class="navbar-brand" onclick="_paq.push(['trackEvent', 'Click', 'Logo']);">
                <div id="logo" class="@logo"></div>
            </a>
        </div>


    </div>
    <div id="view-wrapper">
        @if (Request.IsAuthenticated)
        {
            <div id="side-menu" class="collapse navbar-collapse" role="navigation">

                <div id="user-neighborhood">
                    @Html.Action("PostalCode", "Users")
                </div>

                @*<div id="sticky-anchor"></div>*@
                <div id="sticky">
                    <ul class="nav nav-pills nav-stacked">
                        <li @Html.Raw(ViewUtils.IsActiveAction(ViewContext, "Home") ? "class=\"active\"" : string.Empty)>
                            @{ Html.RenderAction("HomePageIcon", "HelpIcon"); }
                            <a href="@Url.RouteUrl("Default", new {controller = "Home"})" onclick="_paq.push(['trackEvent', 'Click', 'StartPage']);">
                                <i class="fa fa-map-marker margin-10-px"></i> @Button.StartPage
                            </a>
                        </li>
                        <li class="menu-divider" />
                        
                        @if (System.Web.Configuration.WebConfigurationManager.AppSettings["Company"] != "comunios")
                        {
                        <li @Html.Raw(ViewUtils.IsActiveAction(ViewContext, "NeighborhoodMessages") ? "class=\"active\"" : string.Empty)>
                            <a href="@Url.RouteUrl("Default", new { controller = "NeighborhoodMessages", action = "Index" })">
                                <i class="fa fa-newspaper-o"></i> @Button.NeighborhoodMessages
                            </a>
                            @*                <ul>*@
                            @*                    <li @Html.Raw(ViewUtils.IsActiveAction(ViewContext, "NeighborhoodMessages", "Index") ? "class=\"active\"" : string.Empty)>*@
                            @*                        <a href="@Url.RouteUrl("Default", new { controller = "NeighborhoodMessages", action = "Index" })">@Button.AllMessages</a>*@
                            @*                    </li>*@
                            @*                    <li @Html.Raw(ViewUtils.IsActiveAction(ViewContext, "NeighborhoodMessages", "NeighborMessages") ? " class=\"active\"" : string.Empty)>*@
                            @*                        <a href="@Url.RouteUrl("Default", new { controller = "NeighborhoodMessages", action = "NeighborMessages" })">@Button.NeighborMessages</a>*@
                            @*                    </li>*@
                            @*                    <li @Html.Raw(ViewUtils.IsActiveAction(ViewContext, "NeighborhoodMessages", "AssociationMessages") ? " class=\"active\"" : string.Empty)>*@
                            @*                        <a href="@Url.RouteUrl("Default", new { controller = "NeighborhoodMessages", action = "AssociationMessages" })">@Button.AssociationMessages</a>*@
                            @*                    </li>*@
                            @*                    <li @Html.Raw(ViewUtils.IsActiveAction(ViewContext, "NeighborhoodMessages", "OrganizationMessages") ? " class=\"active\"" : string.Empty)>*@
                            @*                        <a href="@Url.RouteUrl("Default", new { controller = "NeighborhoodMessages", action = "OrganizationMessages" })">@Button.OrganizationMessages</a>*@
                            @*                    </li>*@
                            @*                </ul>*@
                        </li>
                        }
                        <li @Html.Raw(ViewUtils.IsActiveAction(ViewContext, "Activities") ? "class=\"active\"" : string.Empty)>
                            <a href="@Url.RouteUrl("Default", new { controller = "Activities", action = "Index" })">
                                <i class="fa fa-calendar"></i> @Button.NeighborhoodActivities
                            </a>
                        </li>
                        @*@{ var isCircleMarketplace = ViewUtils.IsActiveAction(ViewContext, "Marketplace") && ViewContext.RouteData.Values.ContainsKey("circleId"); }
                        <li @Html.Raw(ViewUtils.IsActiveAction(ViewContext, "Marketplace") && !isCircleMarketplace ? "class=\"active\"" : string.Empty)>
                            <a href="@Url.RouteUrl("Default", new {controller = "Marketplace", action = "Index"})">
                                <i class="fa fa-exchange"></i> @Button.Marketplace
                            </a>
                        </li>*@
                        @{ 
                            var isCircleMarketplace = ViewUtils.IsActiveAction(ViewContext, "Marketplace") && ViewContext.RouteData.Values.ContainsKey("circleId");
                            var category = 0;
                            if (Request.Params["Category"] != null)
                            {
                                int.TryParse(Request.Params["Category"], out category);
                            }
                        }
                        <li @Html.Raw(ViewUtils.IsActiveAction(ViewContext, "Marketplace") && !isCircleMarketplace && category == 2 ? "class=\"active\"" : string.Empty)>
                            <a href="@Url.RouteUrl("Default", new {controller = "Marketplace", action = "Overview", Category = 2})">
                                <i class="fa fa-shopping-cart"></i> @Button.StuffForSale
                            </a>
                        </li>
                        <li @Html.Raw(ViewUtils.IsActiveAction(ViewContext, "Marketplace") && !isCircleMarketplace && category == 3 ? "class=\"active\"" : string.Empty)>
                            <a href="@Url.RouteUrl("Default", new {controller = "Marketplace", action = "Overview", Category = 3})">
                                <i class="fa fa-exchange"></i> @Button.StuffToBorrow
                            </a>
                        </li>
                        <li @Html.Raw(ViewUtils.IsActiveAction(ViewContext, "Marketplace") && !isCircleMarketplace && category == 1 ? "class=\"active\"" : string.Empty)>
                            <a href="@Url.RouteUrl("Default", new {controller = "Marketplace", action = "Overview", Category = 1})">
                                <i class="fa fa-cutlery"></i> @Button.Meals
                            </a>
                        </li>
                        <li @Html.Raw(ViewUtils.IsActiveAction(ViewContext, "Marketplace") && !isCircleMarketplace && category == 0 ? "class=\"active\"" : string.Empty)>
                            <a href="@Url.RouteUrl("Default", new {controller = "Marketplace", action = "Overview", Category = 0})">
                                <i class="fa fa-users"></i> @Button.NeighbourHelp
                            </a>
                        </li>


                        <li @Html.Raw(ViewUtils.IsActiveAction(ViewContext, "Organizations") ? "class=\"active\"" : string.Empty)>
                            <a href="@Url.RouteUrl("Default", new {controller = "Organizations", action = "Index"})">
                                <i class="fa fa-sitemap"></i> @Button.Organizations
                            </a>
                        </li>
                        <li>
                            @Html.Action("MenuActions", "Action")
                        </li>
                        <li class="menu-divider" />
                        @{
            var myCirclesSelected = isCircleMarketplace || (string.Equals(ViewUtils.GetController(ViewContext), "Circles", StringComparison.OrdinalIgnoreCase) && !string.Equals(ViewUtils.GetAction(ViewContext), "Public", StringComparison.OrdinalIgnoreCase)) || string.Equals(ViewUtils.GetController(ViewContext), "Jobs");
                        }
                        <li @Html.Raw(myCirclesSelected ? "class=\"active\"" : string.Empty)>
                            <a href="@Url.RouteUrl("Default", new {controller = "Circles", action = "Index"})">
                                <i class="fa fa-dot-circle-o"></i> @Button.MyCircles
                            </a>
                        </li>
                        <li @Html.Raw(ViewUtils.IsActiveAction(ViewContext, "Circles", "Public") ? "class=\"active\"" : string.Empty)>
                            <a href="@Url.RouteUrl("Default", new {controller = "Circles", action = "Public"})">
                                <i class="fa fa-toggle-off"></i> @Button.PublicCircles
                            </a>
                        </li>
                        @Html.Action("FeaturedCircles", "Circles", new { controller = ViewUtils.GetController(ViewContext) })
                        <li @Html.Raw(ViewUtils.IsActiveAction(ViewContext, "Squares") ? "class=\"active\"" : string.Empty)>
                            @Html.Action("MenuSquares", "Squares")
                        </li>
                        <li class="menu-divider" />
@if (System.Web.Configuration.WebConfigurationManager.AppSettings["Company"] == "leeftsamen")
{
                        <li>
                            <a onclick="_paq.push(['trackEvent', 'Help', 'YouTube']);" href="https://www.youtube.com/watch?v=ZtGGuRjDljg&list=PLHvW0o_IfM07IKKoWIX3Aipkphfv86rIH" target="_blank">
                                <i class="fa fa-youtube-play"></i> @Button.InstructionVideos
                            </a>
                        </li>
}
                        <li>
                            <a onclick="_paq.push(['trackEvent', 'Help', 'Email']);" href="mailto:@System.Web.Configuration.WebConfigurationManager.AppSettings["EmailSuggestions"]">
                                <i class="fa fa-envelope-o"></i> @Button.SendUsAnEmail
                            </a>
                        </li>
                        <li class="menu-divider" />
                    </ul>
                    <div class="btn btn-default btn-cta sidebar-suggestion" data-target="#suggestionModal" data-toggle="modal"><span class="glyphicon glyphicon-plus-sign"></span>@Button.GiveSuggestion</div>
                </div>
            </div>
        }

        <div id="page-wrapper" @Html.Raw(Request.IsAuthenticated == false && Request.Url.Segments.Count() == 1 ? "class=\"page-wrapper-guest\"" : string.Empty)>
            <div>
                @Html.Partial("_Notification")
                @RenderBody()

                <footer class="home-footer">
                    <p>&copy; @DateTime.Now.Year @Text.FooterAllRightsReserved</p>
                    @if (System.Web.Configuration.WebConfigurationManager.AppSettings["Company"] == "comunios")
                    {
                    <p>Comunios is a joint initiative by Leeftsamen.nl and the Fronterra Foundation for Sustainable Social and Cultural Development</p>
                    }
                    <a onclick="_paq.push(['trackEvent', 'Footer', 'Email']);" href="mailto:info@leeftsamen.nl">@Text.FooterSendUsAnEmail</a>
                    &nbsp;-&nbsp;
                    <a onclick="_paq.push(['trackEvent', 'Footer', 'Twitter']);" href="https://twitter.com/leeftsamen" target="_blank">@Text.FooterFollowUsOnTwitter</a>
                    &nbsp;-&nbsp;
                    <a onclick="_paq.push(['trackEvent', 'Footer', 'YouTube']);" href="https://www.youtube.com/watch?v=ZtGGuRjDljg" target="_blank">@Text.FooterFollowUsOnYouTube</a>
                    &nbsp;-&nbsp;
                    <a onclick="_paq.push(['trackEvent', 'Footer', 'TermsAndConditions']);" href="@Url.Action("termsandconditions", "page")">@Text.FooterTermsAndConditions</a>
                </footer>
            </div>
        </div>
    </div>

    @Html.Partial("_ModalReportAbuse")
    @Html.Partial("_SuggestionModal", new LeeftSamen.Portal.Web.Models.Suggestion.SuggestionModalViewModel())
    @Html.Partial("_Modal")
    @RenderSection("modals", false)

    <div id="__AjaxAntiForgeryForm">
        @Html.AntiForgeryToken()
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/bootstrap")
    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    @*@Scripts.Render("~/bundles/font")*@
    @Scripts.Render("~/bundles/leeftsamen")
    @RenderSection("scripts", false)
    <script>
        $(function () {
            $('[data-toggle="tooltip"]').tooltip();
            $('[data-toggle="tooltip"]').hover(
                function () {
                    return;
                },
                function () {
                    if ($(this).data("submit") != false) {
                        $(this).parents("form").submit();
                    }
                });

            @* Configure the contents of the generic modal *@
            if ($('#modal-welcome').length === 1 && readCookie("welcome") == null) {
                $('#modal-welcome').modal('toggle');
                createCookie("welcome", "1", 365);
            }

            // Bootstrap modal IOS9 quick-fix
            if (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream) {
                document.querySelector('meta[name=viewport]')
                  .setAttribute(
                    'content',
                    'initial-scale=1.0001, minimum-scale=1.0001, maximum-scale=1.0001, user-scalable=no'
                  );
            }

            $('#modal').on('show.bs.modal', function (event) {
                var triggerButton = $(event.relatedTarget);
                var modal = $(this);
                modal.find('.modal-title').text(triggerButton.data('title'));
                modal.find('.modal-body p').text(triggerButton.data('body'));

                var form = modal.find('form');
                form.attr('action', triggerButton.data('action'));
                form.attr('method', triggerButton.data('method') || 'post');

                var hiddenInputs = modal.find('form .hidden').empty();
                var hiddenData = triggerButton.data('hidden');
                for (var name in hiddenData) {
                    $("<input>").attr({ "type": "hidden", "name": name }).val(hiddenData[name]).appendTo(hiddenInputs);
                }

                modal.find('button[type="submit"]').text(triggerButton.data('button'));
            });

            @* Make table-rows with a href data attribute clickable. *@
            $('.table tr[data-href]').click(function (e) {
                e.preventDefault();
                window.location = $(this).data('href');
            });

            $(".datepicker-control > input").datepicker({
                dateFormat: "dd-mm-yy"
            });
            $(".datepicker-control.futuredate > input").datepicker("option", "minDate", new Date());

            $(".datepicker-control .btn-default").click(function () {
                $(this).parent().parent().find("input").datepicker("show");
            });

            if (typeof $('#colorselector').colorselector === "function") {
                $('#colorselector').colorselector();
            }

            @* Display name of selected file *@
            $(".file-input").change(function () {
                $(this).parents(".form-group:first").find(".file-input-filename").html($(this).val().replace("C:\\fakepath\\", ""));
            });
        });
        
    </script>
    @if (System.Web.Configuration.WebConfigurationManager.AppSettings["Company"] == "comunios")
    {
        <script>
            function findAdress(searchString) {
                return $.post('@Html.Raw(Ajax.JavaScriptStringEncode(Url.Action("FindAdress", "Register")))', {
                    __RequestVerificationToken: $('#__AjaxAntiForgeryForm input[name=__RequestVerificationToken]').val(),
                    searchString: searchString
                });
            }
        </script>
    }
    else
    {
        <script>
            function postalCodeCheck(postalCode, houseNumber) {
                return $.post('@Html.Raw(Ajax.JavaScriptStringEncode(Url.Action("PostalCodeCheck", "Register")))', {
                    __RequestVerificationToken: $('#__AjaxAntiForgeryForm input[name=__RequestVerificationToken]').val(),
                    postalCode: postalCode,
                    houseNumber: houseNumber
                });
            }
        </script>
    }
    @if (Request.IsAuthenticated)
    {
        <audio id="notification" src="~/Content/Audio/notification.mp3" preload="none"></audio>
        <script>
            function checkForNewNotifictions() {
                $.ajax({
                    url: '@Html.Raw(Ajax.JavaScriptStringEncode(Url.RouteUrl("Default", new { controller = "Notifications", action = "GetNewNotificationStripped" })))'
                }).done(function (data) {
                    if (typeof data.Message !== "undefined") {
                        if (("Notification" in window)) {
                            var notification;
                            if (Notification.permission === "granted") {
                                notification = new Notification(data.Message);
                                notification.onclick = function () {
                                    window.location = data.Url;
                                };
                            } else if (Notification.permission !== 'denied') {
                                Notification.requestPermission(function (permission) {
                                    if (permission === "granted") {
                                        notification = new Notification(data.Message);
                                        notification.onclick = function () {
                                            window.location = data.Url;
                                        };
                                    }
                                });
                            }

                            document.getElementById('notification').play();
                            if (!document.querySelectorAll('#latestNotifications a[data-notification="' + data.NotificationId + '"]').length) {
                                $('#latestNotifications').prepend(
                                    '<li>' +
                                    '<a data-notification="' + data.NotificationId + '" href="' + data.Url + '">' +
                                    '<label class="label label-primary">@Label.New</label> ' + data.Message +
                                    '</a>' +
                                    '</li><li class="divider"></li>');
                                var badge = $('#unreadNotificationsBadge');
                                badge.html(parseInt(badge.html()) + 1);
                                badge.css({ display: "inline-block" });
                            }
                        }
                    }
                }).fail(function () {
                    window.clearInterval(checkForNewNotifictionsIntervalId);
                });
            }

            function createCookie(name, value, days) {
                var expires = "";

                if (days) {
                    var date = new Date();
                    date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                    expires = "; expires=" + date.toGMTString();
                }

                document.cookie = name + "=" + value + expires + "; path=/";
            }

            function readCookie(name) {
                var nameEq = name + "=";
                var ca = document.cookie.split(';');
                for (var i = 0; i < ca.length; i++) {
                    var c = ca[i];
                    while (c.charAt(0) === ' ') {
                        c = c.substring(1, c.length);
                    }

                    if (c.indexOf(nameEq) === 0) {
                        return c.substring(nameEq.length, c.length);
                    }
                }

                return null;
            }

            var checkForNewNotifictionsIntervalId = window.setInterval(checkForNewNotifictions, 60000);
            checkForNewNotifictions();

            $(function () {
                if (typeof window.LeeftSamenAndroidUnsupportedFileUpload !== "undefined") {
                    $("input[type='file']").click(function () {
                        alert('@Text.AndroidUploadNotSupported');
                    });
                }
            });

            tinymce.init({
                selector: '.text-editor',
                style_formats_merge: false,
                style_formats: [
                    {
                        title: "Inline",
                        items: [
                            { title: "Bold", icon: "bold", format: "bold" },
                            { title: "Italic", icon: "italic", format: "italic" },
                            { title: "Underline", icon: "underline", format: "underline" },
                            { title: "Strikethrough", icon: "strikethrough", format: "strikethrough" },
                            { title: "Superscript", icon: "superscript", format: "superscript" },
                            { title: "Subscript", icon: "subscript", format: "subscript" },
                            { title: "Code", icon: "code", format: "code" }
                        ]
                    },
                    {
                        title: "Blocks",
                        items: [
                            { title: "Paragraph", format: "p" },
                            { title: "Blockquote", format: "blockquote" },
                            { title: "Pre", format: "pre" }
                        ]
                    }
                ],
                invalid_elements: "h1,div,script",
                //extended_valid_elements: "iframe[src|frameborder|width|height]", //TODO: Ask Thomas why
                schema: "html5",
                relative_urls: true,
                remove_script_host: false,
                convert_urls: false,
                plugins: "link",
                @if (System.Web.Configuration.WebConfigurationManager.AppSettings["Company"] == "comunios")
                {
                    @:language: 'mk_MK'
                }
                else
                {
                    @:language: 'nl'
                }
            });

            function setSearchSize() {
                var box = document.getElementById('searchBox');
                var submit = document.getElementById('searchSubmit');
                var logo = document.getElementsByClassName('navbar-brand')[0];
                var nav = document.getElementsByClassName('nav navbar-nav navbar-right')[0];
                box.style.left = logo.clientWidth + 'px';
                var right = window.innerWidth - nav.offsetLeft;
                box.style.right = (right + 60) + 'px';
                submit.style.right = right + 'px';
            }

            window.onresize = function () {
                setSearchSize();
            };
            setSearchSize();

        </script>
    }
    @using (Html.BeginForm("LinkTokenAndroid", "Account", null, FormMethod.Post, new {  }))
    {
        @Html.AntiForgeryToken()
        <input type="hidden" class="token" name="token" />
    }
    <script type="text/javascript">
        $(function () {
            if (typeof window.JavaScriptHandler !== "undefined") {
                var token = window.JavaScriptHandler.GetIosCode();
                if (token == '') {
                    return;
                }
                var $token = $("input[type=hidden].token");
                $token.val(token);
                var $form = $token.closest("form");
                $.post("/account/linktokenandroid", $form.serialize());
            }
        });
    </script>
</body>
</html>