@using System
@using LeeftSamen.Portal.Data.Models
@using LeeftSamen.Portal.Web.Models.Users
@model LeeftSamen.Portal.Data.Models.MarketplaceItem

@{
    // NOTICE: Changing markup within this view will change the Pictureview as well as the Listview in the marketplace.

    // default behavior is non-listview
    var listView = ViewData.ContainsKey("ListView") ? (bool)ViewData["ListView"] : false;
    int? overviewCircleId = null;
    int tempCircleId = 0;
    if (ViewData.ContainsKey("CircleId") && ViewData["CircleId"] != null && Int32.TryParse(ViewData["CircleId"].ToString(), out tempCircleId))
    {
        overviewCircleId = tempCircleId;
    }
    var label = Model.Type.DisplayName();

    var itemUrl = overviewCircleId.HasValue ? Url.RouteUrl("CircleMarketplaceDetail", new { controller = "Marketplace", action = "Detail", circleId = overviewCircleId, id = Model.MarketplaceItemId }) :
        Url.RouteUrl("DefaultDetail", new { controller = "Marketplace", action = string.Empty, id = Model.MarketplaceItemId });
    var hasImage = Model.Image1Id.HasValue;
    var isOrganizationMessage = Model.OrganizationMembershipId.HasValue;
    var headerColSize = listView ? "col-md-4" : null;
    var bodyColSize = listView ? "col-md-8" : null;
    var itemColSize = listView ? "col-md-12" : null;
    var organizationClass = isOrganizationMessage ? " " + Model.OrganizationMembership.Organization.OrganizationType.Type.ToString().ToLower() : string.Empty;
}


        <div class="marketplace-item panel panel-default @itemColSize @organizationClass">

            @if (hasImage || listView)
            {
                var imageUrl = hasImage
                    ? (listView ? Url.RouteUrl("DefaultDetail", new { controller = "Marketplace", action = "ItemImage", id = Model.MarketplaceItemId, mediaId = Model.Image1Id, index = 1, width = 300, height = 200, crop = true })
                        : Url.RouteUrl("DefaultDetail", new { controller = "Marketplace", action = "ItemImage", id = Model.MarketplaceItemId, mediaId = Model.Image1Id, index = 1 }))
                    : Url.RouteUrl("Default", new { controller = "Marketplace", action = "PlaceholderItemImage", width = 300, height = 200, crop = true });
                    <div class="panel-heading relative @headerColSize">
                        <a href="@itemUrl">
                            @if (imageUrl != null)
                            {
                                <img src="@imageUrl" alt="">
                            }
                            else
                            {
                                <div style="background: #eeeeee; width: 100%; height: 200px; vertical-align: middle;"></div>
                            }
                            <label class="label label-info category">@label: @Model.Category.Name</label>
                        </a>
                    </div>
            }
            <div class="panel-body @bodyColSize @(hasImage || listView ? String.Empty : "labeled")">
                @if (!hasImage && !listView)
                {
                <label class="label label-info category">@label: @Model.Category.Name</label>
                }
                <a href="@itemUrl" class="title"><h4>@Model.Title</h4></a>
                @if (Model.PaymentOption.HasValue)
                {
                <span class="price">@Model.PaymentOption.DisplayName()</span>
                }
                else if (Model.Price.HasValue)
                {
                    if (Model.Currency == MarketplaceItem.MarketplaceCurrency.Euro)
                    { 
                        <span class="price">@Model.Price.Value.ToString("c")</span>
                    }
                    if (Model.Currency == MarketplaceItem.MarketplaceCurrency.Zuiderling)
                    {
                        <span class="price">
                            @Model.Price.Value 
                            <span class="currency">@Label.PaymentCurrencyZuiderling</span>
                        </span>
                    }
                }
                @if (listView)
                {
                <div class="description">
                    <p>
                        @Html.Raw(Model.Description.StripHtml().Truncate())
                    </p>
                </div>
                }
            </div>
            @if (!listView)
            {
            <div class="panel-body panel-meta @bodyColSize">
                <label class="label label-info">@Model.CreationDateTime.ToDateString() | @Model.CreationDateTime.ToShortTimeString() | @(Model.Distance.HasValue ? String.Format(Text.DistanceFromYou, Model.Distance) : null)</label>
            </div>
            }
            <div class="panel-footer bottom-footer @bodyColSize">
                @if (listView)
                {
                <div class="col-md-6">
                    <label class="label label-info">@Model.CreationDateTime.ToDateString() | @Model.CreationDateTime.ToShortTimeString() | @(Model.Distance.HasValue ? String.Format(Text.DistanceFromYou, Model.Distance) : null)</label>
                </div>
                }
                @if (isOrganizationMessage)
                {
                @(string.Format(Label.PersonOfOrganization, Label.OrganizationMember, Model.OrganizationMembership.Organization.Name))
                }
                else
                {
                @Html.Partial("_UserProfileImage", new UserProfileImage(Model.Owner.ProfileImageId, Model.Owner.Id, "profile-image-sm"))
                    @Model.Owner.Name
                }
            </div>
        </div>

